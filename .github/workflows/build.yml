on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  openwrt_version: '24.10.0'
  tmp_dir: ${{ github.workspace }}/tmp

permissions:
  contents: write
  repository-projects: read

jobs:
  info:
    runs-on: ubuntu-latest
    outputs:
      targets: "${{ steps.info.outputs.targets }}"
      flavors: "${{ steps.info.outputs.flavors }}"
    steps:
      - name: Git checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 1
      - id: info
        shell: bash
        run: |
          FLAVORS=$(ls -1 flavors/ | jq -R -s -c 'split("\n") | map(select(. != ""))')
          TARGETS=$(yq -o json '.' .github/config/targets.yaml | jq -c -r '[.[]|select(.enabled!=false)]')
          MATRIX=$(jq -c -s '[.[0][] as $flavor | .[1][] | { flavor: $flavor } + .]' <(echo "${FLAVORS}") <(echo "${TARGETS}"))
          echo "flavors=${FLAVORS}" | tee -a ${GITHUB_OUTPUT}
          echo "targets=${MATRIX}" | tee -a ${GITHUB_OUTPUT}
  build:
    runs-on: ubuntu-latest
    needs: info
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.info.outputs.targets) }}
    steps:
      - name: Git checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 1

      - shell: bash
        run: |
          cd flavors/${{ matrix.flavor }}
          ln -s ../../.releaserc.json

      - name: Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
          dry_run: true
          working_directory: flavors/${{ matrix.flavor }}
          tag_format: ${{ matrix.flavor }}-${version}
          semantic_version: 23.0.2
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
            conventional-changelog-conventionalcommits@7.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - id: vars
        shell: bash
        run: |
          BUILDER=$(curl -s https://downloads.openwrt.org/releases/${{ env.openwrt_version }}/targets/${{ matrix.cpu }}/${{ matrix.platform }}/ | awk '/-imagebuilder-${{ env.openwrt_version }}/' | sed -r 's/.*href="([^"]+).*/\1/g' )
          MANIFEST=$(curl -s https://downloads.openwrt.org/releases/${{ env.openwrt_version }}/targets/${{ matrix.cpu }}/${{ matrix.platform }}/ | awk '/-${{ env.openwrt_version }}-.*.manifest/' | sed -r 's/.*href="([^"]+).*/\1/g' )
          FLAVOR_VERSION="${{ steps.semantic.outputs.new_release_version }}"
          echo "sha_short=$(git rev-parse --short HEAD)" | tee -a "${GITHUB_OUTPUT}"
          echo "builder_file=${BUILDER}" | tee -a "${GITHUB_OUTPUT}"
          echo "builder_url=https://downloads.openwrt.org/releases/${{ env.openwrt_version }}/targets/${{ matrix.cpu }}/${{ matrix.platform }}/${BUILDER}" | tee -a "${GITHUB_OUTPUT}"
          echo "manifest_url=https://downloads.openwrt.org/releases/${{ env.openwrt_version }}/targets/${{ matrix.cpu }}/${{ matrix.platform }}/${MANIFEST}" | tee -a "${GITHUB_OUTPUT}"
          echo "profiles_url=https://downloads.openwrt.org/releases/${{ env.openwrt_version }}/targets/${{ matrix.cpu }}/${{ matrix.platform }}/profiles.json" | tee -a "${GITHUB_OUTPUT}"
          echo "flavor_version=${FLAVOR_VERSION:-0.0.0}" | tee -a "${GITHUB_OUTPUT}"

      - name: Cache Imagebuilder
        id: cache-imagebuilder
        uses: actions/cache@v4
        with:
          path: ${{ steps.vars.outputs.builder_file }}
          key: ${{ steps.vars.outputs.builder_file }}

      - name: Download Imagebuilder
        if: steps.cache-imagebuilder.outputs.cache-hit != 'true'
        shell: bash
        run: |
          wget -q -c "${{ steps.vars.outputs.builder_url }}" -O "${{ steps.vars.outputs.builder_file }}" 

      - name: Prep env
        shell: bash
        env:
          BUILDER_FILE: ${{ steps.vars.outputs.builder_file }}
        run: |
          set -x
          mkdir -p ${{ env.tmp_dir }}
          cd ${{ env.tmp_dir }}
          if [[ ! -s openwrt.manifest ]]; then wget -q "${{ steps.vars.outputs.manifest_url }}" -O openwrt.manifest ; fi
          if [[ ! -s profiles.json ]]; then wget -q "${{ steps.vars.outputs.profiles_url }}" -O profiles.json ; fi
          tar --strip-components=1 -xf "${{ github.workspace }}/${BUILDER_FILE}" "${BUILDER_FILE%.*.*}/"

      - name: Prep mods
        shell: bash
        run: |
          set -x
          touch ${{ env.tmp_dir }}/extra.manifest
          mkdir -p ${{ env.tmp_dir }}/{files,target}
          modified="false"
          # Copy modifications
          for x in '/' "/${{ matrix.cpu }}/" "/${{ matrix.cpu }}-${{ matrix.platform }}/" "/${{ matrix.cpu }}-${{ matrix.platform }}_${{ matrix.profile }}/"; do
            for y in 'files' 'target'; do
              if [[ -d "${{ github.workspace }}/flavors/${{ matrix.flavor }}${x}${y}" ]]; then
                echo "::group::Importing ${{ matrix.flavor }}${x}${y}"
                cp --recursive "${{ github.workspace }}/flavors/${{ matrix.flavor }}${x}${y}/." "${{ env.tmp_dir }}/${y}/."
                echo "::endgroup::"
                modified="true"
              fi
            done
            if [[ -e "${{ github.workspace }}/flavors/${{ matrix.flavor }}${x}extra.manifest" ]]; then
              echo "::group::Importing ${{ matrix.flavor }}${x}extra.manifest"
              cat "${{ github.workspace }}/flavors/${{ matrix.flavor }}${x}extra.manifest" >> "${{ env.tmp_dir }}/extra.manifest"
              modified="true"
            fi
          done
          # Add custom repositories if defined
          if [[ -e "${{ github.workspace }}/flavors/${{ matrix.flavor }}/repositories.conf" ]]; then
            cat "${{ github.workspace }}/flavors/${{ matrix.flavor }}/repositories.conf" repositories.conf > repositories.conf.tmp && mv repositories.conf.tmp repositories.conf
            if [[ ! -d "files/etc/opkg" ]]; then
              mkdir -p "${{ env.tmp_dir }}/files/etc/opkg"
            fi
            cp "${{ github.workspace }}/flavors/${{ matrix.flavor }}/repositories.conf" "${{ env.tmp_dir }}/files/etc/opkg/customfeeds.conf"
            modified="true"
          fi
          if [[ "${modified}" == "true" ]]; then
            echo -e "REPO=${{ github.repository }}\nSHA=${GITHUB_SHA}\nSHA_SHORT=${{ steps.vars.outputs.sha_short }}\nRUN_NUM=${GITHUB_RUN_NUMBER}\nRUN_ID=${GITHUB_RUN_ID}\nCPU=${{ matrix.cpu }}\nPLATFORM=${{ matrix.platform }}\nPROFILE=${{ matrix.profile }}\nFLAVOR=${{ matrix.flavor }}\nOPENWRT_VERSION=${{ env.openwrt_version }}\nFLAVOR_VERSION=${{ steps.vars.outputs.flavor_version }}" > "${{ env.tmp_dir }}/files/build-custom"
          fi

      - name: Build
        shell: bash
        run: |
          set -x
          cd ${{ env.tmp_dir }}
          export MANIFEST_PKGS=$(awk '!/^#/{print $1}' openwrt.manifest | tr '\n' ' ')
          export PROFILE_PKGS=$(jq --arg profile generic -c --raw-output '.default_packages + .profiles[$profile].device_packages | sort | .[]' profiles.json | tr '\n' ' ')
          export EXTRA_PKGS=$(awk '!/^#/{print $1}' extra.manifest | tr '\n' ' ')
          export PACKAGES=$(echo "${MANIFEST_PKGS:-} ${PROFILE_PKGS:-} ${EXTRA_PKGS:-}" | xargs -n1 | sort -u | xargs)
          echo "::group::make image"
          make image PROFILE="${{ matrix.profile }}" EXTRA_IMAGE_NAME="${{ matrix.flavor }}-${{ steps.vars.outputs.flavor_version }}-${{ steps.vars.outputs.sha_short }}" PACKAGES="${PACKAGES}" FILES=files/
          echo "::endgroup::"
          echo "::group::Results"
          find bin/targets/ -type f -iname "*${{ matrix.cpu }}*"
          echo "::endgroup::"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.openwrt_version }}-${{ matrix.flavor }}-${{ steps.vars.outputs.flavor_version }}-${{ steps.vars.outputs.sha_short }}_${{ matrix.cpu }}-${{ matrix.platform }}_${{ matrix.profile }}
          path: "${{ env.tmp_dir }}/bin/targets/"
          retention-days: 1
  release:
    runs-on: ubuntu-latest
    needs:
      - info
      - build
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        flavor: ${{ fromJSON(needs.info.outputs.flavors) }}
    steps:
      - name: Git checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - shell: bash
        run: |
          cd flavors/${{ matrix.flavor }}
          ln -s ../../.releaserc.json

      - name: Generate Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
          working_directory: flavors/${{ matrix.flavor }}
          tag_format: ${{ matrix.flavor }}-${version}
          semantic_version: 23.0.2
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
            conventional-changelog-conventionalcommits@7.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        with:
          path: results
          pattern: ${{ env.openwrt_version }}-${{ matrix.flavor }}-*
          merge-multiple: true

      - name: Debug
        shell: bash
        run: |
          echo "::group::results"
          find results
          echo "::endgroup::"
          mkdir artifacts
          find results/ -type f -name 'openwrt-*' -exec mv {} ${{ github.workspace }}/artifacts \;
          find results/ -type f -name 'sha256sums' -exec cat {} \; | grep -v 'profiles.json' > artifacts/sha256sums
          find results/ -type f -name 'profiles.json' -exec cat {} \; | jq -r -c -s '.' > artifacts/profiles.json
          echo "::group::artifacts"
          find  artifacts
          echo "::endgroup::"

      - name: Release
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ matrix.flavor }}-${{ steps.semantic.outputs.new_release_version }}
          files: artifacts/*
